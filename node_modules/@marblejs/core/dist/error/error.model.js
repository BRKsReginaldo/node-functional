"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../+internal/utils");
var ErrorType;
(function (ErrorType) {
    ErrorType["CORE_ERROR"] = "CoreError";
    ErrorType["HTTP_ERROR"] = "HttpError";
    ErrorType["EVENT_ERROR"] = "EventError";
})(ErrorType = exports.ErrorType || (exports.ErrorType = {}));
class HttpError extends utils_1.ExtendableError {
    constructor(message, status, data, context) {
        super(ErrorType.HTTP_ERROR, message);
        this.message = message;
        this.status = status;
        this.data = data;
        this.context = context;
    }
}
exports.HttpError = HttpError;
class CoreError extends utils_1.ExtendableError {
    constructor(message, options) {
        super(ErrorType.CORE_ERROR, message);
        this.message = message;
        Error.prepareStackTrace = (_, stack) => options.stackTraceFactory(message, stack);
        Error.captureStackTrace(this, options.context);
    }
}
exports.CoreError = CoreError;
class EventError extends utils_1.ExtendableError {
    constructor(event, message, data) {
        super(ErrorType.EVENT_ERROR, message);
        this.event = event;
        this.message = message;
        this.data = data;
    }
}
exports.EventError = EventError;
exports.isHttpError = (error) => error.name === ErrorType.HTTP_ERROR;
exports.isCoreError = (error) => error.name === ErrorType.CORE_ERROR;
exports.isEventError = (error) => error.name === ErrorType.EVENT_ERROR;
