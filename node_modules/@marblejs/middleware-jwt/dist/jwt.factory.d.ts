/// <reference types="node" />
import { Observable } from 'rxjs';
import * as jwt from 'jsonwebtoken';
export declare type Payload = string | object | Buffer;
export declare type IssuedAt = {
    iat: number;
};
export declare type ExpiresAt = {
    exp: number;
};
export declare type GenerateOptions = jwt.SignOptions & {
    secret: jwt.Secret;
};
export declare type VerifyOptions = jwt.VerifyOptions & {
    secret: string | Buffer;
};
declare type VerifyTokenHandler = <T extends object>(opts: VerifyOptions) => (token: string) => Observable<T & IssuedAt>;
export declare const generateExpirationInHours: (hours?: number) => number;
export declare const generateToken: ({ secret, ...opts }: GenerateOptions) => (payload?: string | object | Buffer) => string;
export declare const verifyToken: <T extends object>({ secret, ...opts }: VerifyOptions) => (token: string) => T & IssuedAt;
export declare const verifyToken$: VerifyTokenHandler;
export {};
