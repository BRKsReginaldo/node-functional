import * as t from 'io-ts';
import { HttpRequest } from '@marblejs/core';
import { Observable } from 'rxjs';
import { Schema, ValidatorOptions } from './io.middleware';
interface RequestSchema<TBody extends Schema, TParams extends Schema, TQuery extends Schema> {
    body?: TBody;
    params?: TParams;
    query?: TQuery;
    headers?: Schema;
}
export declare const requestValidator$: <TBody extends t.Any = t.UnknownC, TParams extends t.Any = t.UnknownC, TQuery extends t.Any = t.UnknownC>(schema: RequestSchema<TBody, TParams, TQuery>, options?: ValidatorOptions) => <T extends HttpRequest<unknown, unknown, unknown>>(req$: Observable<T>) => Observable<HttpRequest<(TBody | undefined extends t.UnknownC | null | undefined ? unknown : TBody["_A"]) & T["body"], (TParams | undefined extends t.UnknownC | null | undefined ? unknown : TParams["_A"]) & T["params"], (TQuery | undefined extends t.UnknownC | null | undefined ? unknown : TQuery["_A"]) & T["query"]>>;
export {};
